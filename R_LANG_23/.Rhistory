is.integer(z)
is.numeric(z)
reticulate::repl_python()
ns <- c(1,3,5,7,'9')
ns
ns
class(ns)
class(ns)
nd < - c(1,2,3,4,5,6)
nd
nd < - c(1,2,3,4,5,6)
nd <- c(1,2,3,4,5,6)
nd
is.numeric(ns)
#Vector 에서 문자형이 섞여 있으면 모든 요소가 문자형으로 변환 된다.
ns <- c(1,3,5,7,'9')
ns # [1] "1" "3" "5" "7" "9"
is.numeric(ns)
is.character(ns)
nd <- as.numeric(ns)
nd
is.numeric(nd)
is.character(nd)
#자료형의 성격(Type)
mode(ns)
mode(nd)
mode(NA)
mode(non)
mode(NoN)
class(nd)
class(NA)
class(nd)
class(n1)
class(ns)
class(nn)
class(n1)
is.numeric(n1)
n1 <- 10
is.numeric(n1)
class(n1)
class(ns)
class(nd)
now <- "23/22/08"
now
mode(now)
class(now)
dt
dt <-as.Date(now, '%y/%m/%d')
dt
dt <-as.Date(now, '%y/%m/%d')
dt <- as.Date(now, '%y/%m/%d')
dt
now <- "23/22/08"
now
mode(now) #"character"
class(now) # "character"
dt <- as.Date(now, '%y/%m/%d')
dt
dt <- as.Date(now, '%y/%m/%d')
dt <- as.Date(now, '%y/%m/%d')
now <- "23/22/08"
now
mode(now) #"character"
now <- "23/11/08"
now
mode(now) #"character"
class(now) # "character"
dt <- as.Date(now, '%y/%m/%d')
dt
mode(dt)
class(dt)
today <- "2023/11/08"
dt2
today <- "2023/11/08"
dt2 <- as.Date(today,"%Y/%m/%d") # 년도4자리: %Y
dt2
dt2 <- as.Date(today,"%y/%m/%d") # 년도4자리: %Y
dt2
today <- "2023/11/08"
dt2 <- as.Date(today,"%y/%m/%d") # 년도4자리: %Y
dt2
dt2 <- as.Date(today,"%Y/%m/%d") # 년도4자리: %Y
dt2
mode(dt2)
mode(dt2)
class(dt2)
#년/월/일/시/분/초 표기 하기
time <- "2023/11/08 12:30:49"
tm1 <- as.Date(time, "%Y/%m/%d %H:%M:%S")
tm1
tm2 <- strptime(tm, format = "%Y/%m/%d %H:%M:%S" )
tm2 <- strptime(time, format = "%Y/%m/%d %H:%M:%S" )
tm2 <- strptime(time, format = "%Y/%m/%d %H:%M:%S" )
tm2
mode(tm2)
class(tm2)
tmx= Sys.time()
tmx
mode(tmx)
class(tmx)
tmx <- Sys.time()
tmxx <- strptime(tmx, format= "%Y/%m/%d %H:%M:%S")
tmx
tmxx
tmxx <- as.POSIXlt(tmx, format= "%Y/%m/%d %H:%M:%S")
tmx
tmxx
mode(tmx)
mode
class(tmx)
tmxx
mode (tmxx)
mode(tmx)
class(tmx)
class(tmxx)
now  <- Sys.time()
class(now)
tmxx <- as.character(now)
tmx <- as.character(now)
tmx =
# tmxx <- as.POSIXlt(tmx, format= "%Y/%m/%d %H:%M:%S")
tmx
tmx
tmxx <- strptime(tmx, format ="%Y/%m/%d %H:%M:%S")
# tmxx <- strptime(tmx, format ="%Y/%m/%d %H:%M:%S")
tmxx <- as.POSIXlt(tmx, format= "%Y/%m/%d %H:%M:%S")
tmx
tmxx
mode(tmx)
mode (tmxx)
class(tmx)
class(tmxx)
tmx
tmxx
# tmxx <- strptime(tmx, format ="%Y/%m/%d %H:%M:%S")
tmxx <- as.POSIXlt(tmx, format= "%Y/%m/%d %H:%M:%S")
tmx
tmxx
now  <- Sys.time()
class(now)
tmx <- as.character(now)
tmx
# tmxx <- strptime(tmx, format ="%Y/%m/%d %H:%M:%S")
tmxx <- as.POSIXlt(tmx, format= "%Y/%m/%d %H:%M:%S")
tmx
tmxx
# tmxx <- strptime(tmx, format ="%Y/%m/%d %H:%M:%S")
tmxx <- as.POSIXlt(tmx, format= "%Y/%m/%d %H:%M:%S")
now  <- Sys.time()
class(now)
# tmxx <- strptime(tmx, format ="%Y/%m/%d %H:%M:%S")
tmxx <- as.POSIXlt(tmx, format= "%Y/%m/%d %H:%M:%S")
# tmxx <- strptime(tmx, format ="%Y/%m/%d %H:%M:%S")
tmxx <- as.POSIXlt(tmx, format="%Y/%m/%d %H:%M:%S")
now  <- Sys.time()
class(now)
tmx
tmx  <- Sys.time()
class(now)
tmx <- as.character(now)
tmx <- as.character(now)
tmx  <- Sys.time()
class(now)
# tmxx <- strptime(tmx, format ="%Y/%m/%d %H:%M:%S")
tmxx <- as.POSIXlt(tmx, format="%Y/%m/%d %H:%M:%S")
tmx
tmxx
# 로케일 확인
Sys.localeconv()
Sys.local
Sys.getlocale()
Sys.get
Sys.getpid()
Sys.getlocale()
c1 <- c(1,2,3,4,5)
c2 <- c(1:5)
c1
c2
c1 <- c(1,2,3,4,5)
c2 <- c(1:5)
c1
c2
help(num)
help(sum)
?sum
?sum()
?sum
args(sum)
sum(1,2,3,4,5,NA)
sum(1,2,3,4,5,NA, na.rm = TRUE)
#함수 사용예
example(sum)
sum(1:5)
sum (1:2 , 3:5)
sum(1,2,3,4,5)
sum(1,2,3,4,5) #15
#현재 작업공간
getwd()
# sequence value
s1 <- seq(1,10)
# sequence value
@# seq(시작값, 종료값, 증가값 )
# sequence value
# seq(시작값, 종료값, 증가값 )
s1 <- seq(1,10,2)
# sequence value
# seq(시작값, 종료값, 증가값 )
s1 <- seq(0,10,2)
s2 <- seq(1,10,1) #과 동일
# sequence value
# seq(시작값, 종료값, 증가값 )
# 함수에 파라미터
s1 <- seq(10)
# sequence value
# seq(시작값, 종료값, 증가값 )
# 함수에 파라미터
args(seq)
# sequence value
# seq(시작값, 종료값, 증가값 )
# 함수에 파라미터
help(seq)
#1 부터 10까지 홀수 데이터
ox = seq(1,10,2)
ox
#2부터 10까지 짝수 데이터
ex = seq(2,10,2)
ex
args(help()
args(help())
args(help())
args(help
args(help)
args(help)
r1 <- rep(3,5)
r1
r2 <- rep(2:6, 2)
r2
r2 <- rep(0:1000,1000)
r2
r2 <- rep(2:6,2)
r2
r3 <- rep(c('a', 'c'), 3)
r3
r4 <- rep(1:3, 3)
r5 <- rep(c(1:3),3)
r6 <- rep(c(1,2,3),3
)
r4
r5
r6
# 합집합 : union()
n <- c(1,2,3,7)
m <- c(3,5,9,)
uni =union(n,m)
# 합집합 : union()
n <- c(1,2,3,7)
m <- c(3,5,9)
uni =union(n,m)
uni
# 합집합 : union()
n <- c(1,3,5,7)
m <- c(3,5,9)
uni =union(n,m)
uni
#교집합 : intersect()
#n - m  (양쪽에 존재하는 데이터만 선택
is = intersect(n,m)
is
#차집합 : setdiff(n,m)
# n에는 있고, m에는 없는 데이터
# n-m
setdiff(n,m)
# m에는 있고 n에는 없는 데이터
setdiff(m,n)
z = c(n,m)
z
v <- c(1,3,5,7)
v[1]
v[4]
v[1]
v[2]
v[3]
v[4]
v[1]
v[2]
v[3]
v[4]
length(v)
vl=length(v) # 4
v[1:vl]
v[2:3]
rc
# 상대참조
rc <- c(2,4)
rc
# 상대참조
rc <- c(2:4)
rc
v[vc]
vl=length(v) # 4
v[1:vl]
v[2:3] # 3,5
# 상대참조
rc <- c(2:4)
rc # 2 3 4
v[vc]
v[rc]
v[c(2:4)]
V10 <- C(1:10)
V10
¡™£§¶¶•890876™£¢∞§¶¶••ªºº <- ≠≠«“ππøˆ¨¨¥¥†®´∑∑œœœåß∂ƒ©˙∆˚¬¬……æ÷≥≤µ˜∫√çç≈≈Ω 
V10 <- C(1:10)
v10
V10 <- c(1:10)
v10
V10 <- c(1:10)
v10
v10 <- c(1:10)
10
v10
v10[c(1,3,5)]
v10[c(2,4,6, 8:10)]
v10[seq(1, length(v10),2)]
v10[seq(2, length(v10),2)]
v10[-10]
v10[-3]
v10[c(-1,-3)]
gender <-  c("남자","여자","여자","남자","남자")
gender
ng <- as.factor(gender)
ng
source("~/Workspace/MLDS/R_LANG_23/Working/s06-data-vector-04-factor.R", echo=TRUE)
#그래프 그리기
plot(ng)
#  자료형
mode(ng)
class(ng)
is.factor(ng)
#그래프 그리기
par(family="AppleGothic")
plot(ng)
install.packages("extrafont")
library(extrafont)
font_import()
y
font_import()
as.integer(ng)
gender <-  c("남자","여자","여자","남자","남자","아줌마")
gender
ng <- as.factor(gender)
ng
# 빈도수
table(ng)
#그래프 그리기
par(family="AppleGothic")
plot(ng)
#  자료형
mode(ng)
class(ng)
is.factor(ng) # T
as.integer(ng)
as.integer(ng)
gender <-  c("남자","여자","여자","남자","남자","아줌마","아저씨")
gender
ng <- as.factor(gender)
ng
# 빈도수
table(ng)
#그래프 그리기
par(family="AppleGothic")
plot(ng)
#  자료형
mode(ng)
class(ng)
is.factor(ng) # T
as.integer(ng)
gender <-  c('임마',"남자","여자","여자","남자","남자","아줌마","아저씨")
gender
ng <- as.factor(gender)
ng
# 빈도수
table(ng)
#그래프 그리기
par(family="AppleGothic")
plot(ng)
#  자료형
mode(ng)
gender <-  c('임마','임마',"남자","여자","여자","남자","남자","아줌마","아저씨")
gender
ng <- as.factor(gender)
ng
# 빈도수
table(ng)
#그래프 그리기
par(family="AppleGothic")
plot(ng)
gender <-  c('임마','임마',"남자","여자","임마","아져씨","아저씨","아줌마","아저씨")
gender
ng <- as.factor(gender)
ng
# 빈도수
table(ng)
#그래프 그리기
par(family="AppleGothic")
plot(ng)
#  자료형
mode(ng)
gender <-  c('임마','임마',"남자","여자","임마","아져씨","아저씨","아저씨")
gender
ng <- as.factor(gender)
ng
# 빈도수
table(ng)
#그래프 그리기
par(family="AppleGothic")
plot(ng)
source("~/Workspace/MLDS/R_LANG_23/Working/s06-data-vector-04-factor.R", echo=TRUE)
gender <-  c('임마','임마',"남자",'남자','여자',"아져씨","아저씨")
gender
ng <- as.factor(gender)
ng
# 빈도수
table(ng)
#그래프 그리기
par(family="AppleGothic")
plot(ng)
#####################
# Factor Ordinal
# 범주의 순서는 사용자가 지정한 순서대로 정렬
# factor() 함수
#
args(factor)
on <- factor(gender, levels = c("여자","중성","남자"), ordered = T)
on
table(on)
gender <-  c('임마','임마',"남자",'중성','여자',"아져씨","아저씨")
gender
ng <- as.factor(gender)
ng
# 빈도수
table(ng)
#그래프 그리기
par(family="AppleGothic")
plot(ng)
#  자료형
mode(ng)
class(ng)
gender <-  c('임마','임마',"남자",'중성','여자',"아저씨","아저씨")
gender
ng <- as.factor(gender)
ng
# 빈도수
table(ng)
#그래프 그리기
par(family="AppleGothic")
plot(ng)
#  자료형
mode(ng)
class(ng)
is.factor(ng) # T
as.integer(ng)
#####################
# Factor Ordinal
# 범주의 순서는 사용자가 지정한 순서대로 정렬
# factor() 함수
#
args(factor)
on <- factor(gender, levels = c("여자","중성","남자"), ordered = T)
on
table(on)
plot(on)
gender <-  c('남자','여자',"여자",'남자','남자',"중성")
gender
ng <- as.factor(gender)
ng
# 빈도수
table(ng)
#그래프 그리기
par(family="AppleGothic")
plot(ng)
#  자료형
mode(ng)
class(ng)
is.factor(ng) # T
as.integer(ng)
#####################
# Factor Ordinal
# 범주의 순서는 사용자가 지정한 순서대로 정렬
# factor() 함수
#
args(factor)
on <- factor(gender, levels = c("여자","중성","남자"), ordered = T)
on
table(on)
plot(on)
# 남자 여자 여자 남자 남자 중성
# 남자 여자 여자 남자 남자 중성
as.integer(on)
#
par(mflow= c(1,2))
plot(on)
plot(ng)
plot(on)
#
par(mfrow= c(1,2))
plot(on) # 여자, 중성, 남자
plot(ng) # 남자, 여자, 중성
library(ggplot2)
theme_set(theme_grey(base_family="AppleGothic"))
font_import()
library(ggplot2)
theme_set(theme_grey(base_family="AppleGothic"))
